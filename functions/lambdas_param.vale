// a lambda as a function parameter

import stdlib.*;

exported func main() {
  a = do({ 42 });
  println(a); // => 42

  b = 10;
  lam = { mut b = 42; };
  lam!(); // the lambda which is called changes b to 42
  println(b); // => 42

  // double closures:
  d = 7; 
  e = { { d }() }();
  println(e); // => 7
}

func do<C>(callable C) int { // callable is a lambda, which returns 42
  callable()          // callable is called
}

